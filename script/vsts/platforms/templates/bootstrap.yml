steps:
  - pwsh: |
      # OS specific env variables
      if ($env:AGENT_OS -eq "Windows_NT") {
        $env:NPM_BIN_PATH="C:/npm/prefix/npm.cmd"
        $env:npm_config_build_from_source=true
      }
      if ($env:AGENT_OS -eq "Darwin") {
        $env:NPM_BIN_PATH="/usr/local/bin/npm"
        $env:npm_config_build_from_source=true
      }
      if ($env:AGENT_OS -eq "Linux") {
        $env:NPM_BIN_PATH="/usr/local/bin/npm"
        $env:CC=clang
        $env:CXX=clang++
        $env:npm_config_clang=1
      }

      # Bootstrap
      script/bootstrap
    displayName: Bootstrap build environment
    env:
      GITHUB_TOKEN: $(GITHUB_TOKEN)
      CI: true
      CI_PROVIDER: VSTS
    condition: or(ne(variables['MainNodeModulesRestored'], 'true'), ne(variables['ScriptRunnerNodeModulesRestored'], true), ne(variables['ScriptNodeModulesRestored'], 'true'), ne(variables['ApmNodeModulesRestored'], 'true'), ne(variables['LocalPackagesRestored'], 'true'))

  # upload bootstraped repository
  # to provide a ready development environment (similar to a pre-built docker image)
  - template: ./zip-upload.yml
    parameters:
      artifacts:
        - path: '.'
          condition: and(succeeded(), eq(variables.IsBuild, 'true'))
          archiveFileName: bootstrapped_repository_$(Agent.OS)_$(BUILD_ARCH).7z
          archiveDir: $(Build.ArtifactStagingDirectory)
